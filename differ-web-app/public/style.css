@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@200&display=swap');


        body {
          margin: auto;
        }

        header {
          background-color: black;
          font-size: 24px;
          color: white;
          height: 170px;
          width: 100%;
          text-align: center;
          font-family: 'Montserrat', sans-serif;
          font-weight: 100;
          display: flex;
          align-items: center;
          justify-content: center;
        }
          
          .split::-webkit-scrollbar {
            width: 10px;
            height: 10px;
            cursor: pointer;
          }
          
          .split::-webkit-scrollbar-track {
            border-radius: 10px;
            background-color: #eeeeee;
          }
           
          .split::-webkit-scrollbar-thumb {
            background: grey; 
            border-radius: 10px;
          }
          
          .split::-webkit-scrollbar-thumb:hover {
            background: lightgrey; 
          }
          .split::-webkit-scrollbar-corner {
            background-color: #ff000000;
          }

          .main-view {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 40px;
          }

          .logo {
            color: white;
            font-size: 34px;
          }

          pre {
            margin-top: 0px;
          }

          .compare {
            white-space: pre-wrap;
            border-top: 1px solid #d1d1d1;
            border-bottom: 1px solid #d1d1d1;
            margin-top: 0;
            background-color: #f7f7f7;
          }
          .pre-wrapper {
            width: 97%;
            border-radius: 15px;
            border: 1px solid #d1d1d1;
            background-color: #eafbff;
            font-size: 12px;
            line-height: 20px;
            /*height: 90%*/;
            padding-bottom: 20px;
          }

          .differ-header {
            width: 100%;
            min-height: 50px;
            border-radius: 15px 15px 0 0;
            color: rgb(0, 0, 0);
            font-size: 16px;
            border-bottom: 1px solid #d1d1d1;
          }

          .split-view-wrapper {
            /*height: 85%*/
            width: 100%;
            display: flex;
            /*align-items: center*/;
            justify-content: space-between;
          }

          p {
            margin-top: 0px;
            margin-bottom: 0px;
          }
          code {
            padding-left: 20px;
          }

          td:nth-child(even) {
			  word-wrap: break-word;
    word-break: break-all;
    white-space: normal;
          }
          
          td {
            text-align: left;
            vertical-align: top;
          }
          
          table {
            border: 0px;
            border-collapse:collapse;
            line-height: 20px;
            background-color: white;
          }
          td tr {
            border: 0px;
          }

          .added {
            background-color: #d4fede;
            padding-right: 20px;
            display: flex;
          }

          .added-number {
            background-color: #bafad2;
            min-width: 35px;
            text-align: right;
            padding-right: 15px;
            border-left: 1px solid #d1d1d1;
          }
          
          .added:before {
            content: "+";
            align-items: flex-start;
            padding-left: 15px;
            height: 100%;
          }

          .deleted {
            background-color: #ffdedc;
            padding-right: 20px;
            display: flex;
            border-right: 1px solid #d1d1d1;
          }

          .deleted-number {
            background-color: #ffc6c2;
            min-width: 35px;
            text-align: right;
            padding-right: 15px;
          }
          
          .deleted:before {
            content: "-";
            align-items: flex-start;
            padding-left: 15px;
            height: 100%;
          }


          tr:hover .deleted-number{
            filter: brightness(1.05);
            cursor: pointer;
          }
          tr:hover .deleted{
            filter: brightness(1.05);
            cursor: pointer;
          }
          tr:hover .added-number{
            filter: brightness(1.05);
            cursor: pointer;
          }
          tr:hover .added{
            filter: brightness(1.05);
            cursor: pointer;
          }

          .equals-number {
            min-width: 35px;
            text-align: right;
            padding-right: 15px;
            background-color: rgba(241, 241, 241, 0.349);
          }

          .equals {
            padding-left: 35px;
          }

          .equals-number:after {
            content: '';
          }

          .empty, .empty-number {
            background-color: rgba(235, 235, 235, 0.363);
          }

            
          .info {
            display: flex;
            align-items: center;
            font-weight: 100;
            font-family: monospace;
          }

          .file-names {
            font-size: 16px;
            line-height: 20px;
          }

          .file-name2 {
            margin-left: 20px;
          }

          .statistic {
            min-height: 50px;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: space-around
          }

          .changes {
            font-size: 24px;
            display: flex;
            margin-right: 44px;
          }
          .chng-block {
            height: 30px;
            min-width: 30px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 14px;
            padding-right: 10px;
            padding-left: 10px;
          }
          .chng-ins {
            background-color: #bafad2;
            border-radius: 10px 0px 2px 0px;
          }
          .chng-del {
            background-color: #ffc6c2;
          }
          .chng-equ {
            background-color: #e7e7e7;
            border-radius: 0px 0px 10px 2px;
          }

          footer {
            margin-top: 30px;;
            background-color: black;
            font-size: 24px;
            color: white;
            height: 170px;
            width: 100%;
            text-align: center;
            font-family: 'Montserrat', sans-serif;
            font-weight: 100;
            display: flex;
            align-items: center;
            justify-content: center;
          }


/*!
  Theme: GitHub
  Description: Light theme as seen on github.com
  Author: github.com
  Maintainer: @Hirse
  Updated: 2021-05-15

  Outdated base version: https://github.com/primer/github-syntax-light
  Current colors taken from GitHub's CSS
*/

.hljs {
    color: #24292e;
    background: #ffffff00;
  }
  
  .hljs-doctag,
  .hljs-keyword,
  .hljs-meta .hljs-keyword,
  .hljs-template-tag,
  .hljs-template-variable,
  .hljs-type,
  .hljs-variable.language_ {
    /* prettylights-syntax-keyword */
    color: #d73a49;
  }
  
  .hljs-title,
  .hljs-title.class_,
  .hljs-title.class_.inherited__,
  .hljs-title.function_ {
    /* prettylights-syntax-entity */
    color: #6f42c1;
  }
  
  .hljs-attr,
  .hljs-attribute,
  .hljs-literal,
  .hljs-meta,
  .hljs-number,
  .hljs-operator,
  .hljs-variable,
  .hljs-selector-attr,
  .hljs-selector-class,
  .hljs-selector-id {
    /* prettylights-syntax-constant */
    color: #005cc5;
  }
  
  .hljs-regexp,
  .hljs-string,
  .hljs-meta .hljs-string {
    /* prettylights-syntax-string */
    color: #032f62;
  }
  
  .hljs-built_in,
  .hljs-symbol {
    /* prettylights-syntax-variable */
    color: #e36209;
  }
  
  .hljs-comment,
  .hljs-code,
  .hljs-formula {
    /* prettylights-syntax-comment */
    color: #6a737d;
  }
  
  .hljs-name,
  .hljs-quote,
  .hljs-selector-tag,
  .hljs-selector-pseudo {
    /* prettylights-syntax-entity-tag */
    color: #22863a;
  }
  
  .hljs-subst {
    /* prettylights-syntax-storage-modifier-import */
    color: #24292e;
  }
  
  .hljs-section {
    /* prettylights-syntax-markup-heading */
    color: #005cc5;
    font-weight: bold;
  }
  
  .hljs-bullet {
    /* prettylights-syntax-markup-list */
    color: #735c0f;
  }
  
  .hljs-emphasis {
    /* prettylights-syntax-markup-italic */
    color: #24292e;
    font-style: italic;
  }
  
  .hljs-strong {
    /* prettylights-syntax-markup-bold */
    color: #24292e;
    font-weight: bold;
  }
  
  .hljs-addition {
    /* prettylights-syntax-markup-inserted */
    color: #22863a;
    background-color: #f0fff4;
  }
  
  .hljs-deletion {
    /* prettylights-syntax-markup-deleted */
    color: #b31d28;
    background-color: #ffeef0;
  }
  
  .hljs-char.escape_,
  .hljs-link,
  .hljs-params,
  .hljs-property,
  .hljs-punctuation,
  .hljs-tag {
    /* purposely ignored */
  }








  /* resultHtmlString += `<html>
  <head>
      <link rel="stylesheet" href="${'./style.css'}">
      <script src="${'./highlight.min.js'}"></script>
      <script>hljs.highlightAll();</script>
  </head>`
  resultHtmlString += `<body>`;
  resultHtmlString += `
    <header>

    </header>
  `
  resultHtmlString += `<div class="main-view">`
  resultHtmlString += `<div class="pre-wrapper">`;
  resultHtmlString += `
  <div class="differ-header">
      <div class="info">
        <div class="header-block statistic">

          <div class="file-names">
            <p class="file-name">ВСТАВИТЬ ИМЯ ФАЙЛА1 /</p>
            <p class="file-name2">ВСТАВИТЬ ИМЯ ФАЙЛА2</p>
          </div>
          
          <div class="changes">
            <div class="chng-block chng-ins"><p>+(10)</p></div>
            <div class="chng-block chng-del"><p>-(100)</p></div>
            <div class="chng-block chng-equ"><p>=(14)</p></div>
          </div>

          <p class="time-label">время работы программы</p>
        </div>
      </div>
  </div>`
  resultHtmlString += `<pre class="compare">`;
  resultHtmlString += `<div class="split-view-wrapper">`;
  for (let block of result.blocks) {
      resultHtmlString += `<div class=\"${block.class}\">`;
      resultHtmlString += `<ol>`;
      for (let li of block.liElements) {
          resultHtmlString += 
          `<div class="viewable-row ${li.color}"><p class="str-num num-${li.color}">${li.number}</p><li class="li-${li.color}"><code class="javascript">${li.value.replaceAll("<", "&lt").replaceAll(">", "&gt")}</code></li></div>`;
      }
      resultHtmlString += `</ol>`;
      resultHtmlString += `</div>`;
  }
  resultHtmlString += `</code>`;
  resultHtmlString += `</pre>`;
  resultHtmlString += `</div>`;
  resultHtmlString += `</div>`

  resultHtmlString += `
    <footer>
      <p>Специально для Frank Battle 2023</p>
    </footer>
  `

  resultHtmlString += `</body>`; */